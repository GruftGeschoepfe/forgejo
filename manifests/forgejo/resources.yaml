apiVersion: v1
kind: Namespace
metadata:
  name: forgejo
---
apiVersion: v1
data:
  valkey.conf: |
    # Valkey configuration file

    # Network
    bind 0.0.0.0
    port 6379

    # General
    daemonize no
    supervised no

    # Logging
    loglevel notice
    logfile ""

    # Persistence
    dir /data
    save 900 1 300 10 60 10000

    # Memory management

    # Security
    protected-mode yes

    # Additional configuration
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valkey
    app.kubernetes.io/version: 8.1.3
    helm.sh/chart: valkey-0.3.0
  name: valkey
  namespace: forgejo
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kube-vip.io/loadbalancerIPs: 192.168.13.6
  labels:
    app: forgejo
    app.kubernetes.io/instance: forgejo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: forgejo
    app.kubernetes.io/version: 12.0.3
    helm.sh/chart: forgejo-14.0.2
    version: 12.0.3
  name: forgejo-http
  namespace: forgejo
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app.kubernetes.io/instance: forgejo
    app.kubernetes.io/name: forgejo
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kube-vip.io/loadbalancerIPs: 192.168.13.6
  labels:
    app: forgejo
    app.kubernetes.io/instance: forgejo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: forgejo
    app.kubernetes.io/version: 12.0.3
    helm.sh/chart: forgejo-14.0.2
    version: 12.0.3
  name: forgejo-ssh
  namespace: forgejo
spec:
  ports:
  - name: ssh
    port: 22
    protocol: TCP
    targetPort: ssh
  selector:
    app.kubernetes.io/instance: forgejo
    app.kubernetes.io/name: forgejo
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valkey
    app.kubernetes.io/version: 8.1.3
    helm.sh/chart: valkey-0.3.0
  name: valkey
  namespace: forgejo
spec:
  ports:
  - name: valkey
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/name: valkey
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valkey
    app.kubernetes.io/version: 8.1.3
    helm.sh/chart: valkey-0.3.0
  name: valkey-headless
  namespace: forgejo
spec:
  clusterIP: None
  ports:
  - name: valkey
    port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/name: valkey
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    helm.sh/resource-policy: keep
  name: gitea-shared-storage
  namespace: forgejo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: cephfs
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: forgejo
    app.kubernetes.io/instance: forgejo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: forgejo
    app.kubernetes.io/version: 12.0.3
    helm.sh/chart: forgejo-14.0.2
    version: 12.0.3
  name: forgejo
  namespace: forgejo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: forgejo
      app.kubernetes.io/name: forgejo
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: f8fe93125e92b7a17985fe08d4875b9160b74a7bfbdd0ceb3d6b8fd401f19a4b
      labels:
        app: forgejo
        app.kubernetes.io/instance: forgejo
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: forgejo
        app.kubernetes.io/version: 12.0.3
        helm.sh/chart: forgejo-14.0.2
        version: 12.0.3
    spec:
      containers:
      - env:
        - name: SSH_LISTEN_PORT
          value: "2222"
        - name: SSH_PORT
          value: "22"
        - name: GITEA_APP_INI
          value: /data/gitea/conf/app.ini
        - name: GITEA_CUSTOM
          value: /data/gitea
        - name: GITEA_WORK_DIR
          value: /data
        - name: GITEA_TEMP
          value: /tmp/gitea
        - name: TMPDIR
          value: /tmp/gitea
        - name: HOME
          value: /data/gitea/git
        image: code.forgejo.org/forgejo/forgejo:12.0.3-rootless
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          initialDelaySeconds: 200
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: http
          timeoutSeconds: 1
        name: forgejo
        ports:
        - containerPort: 2222
          name: ssh
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
      initContainers:
      - command:
        - /usr/sbin/init_directory_structure.sh
        env:
        - name: GITEA_APP_INI
          value: /data/gitea/conf/app.ini
        - name: GITEA_CUSTOM
          value: /data/gitea
        - name: GITEA_WORK_DIR
          value: /data
        - name: GITEA_TEMP
          value: /tmp/gitea
        image: code.forgejo.org/forgejo/forgejo:12.0.3-rootless
        imagePullPolicy: IfNotPresent
        name: init-directories
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext: {}
        volumeMounts:
        - mountPath: /usr/sbin
          name: init
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
      - command:
        - /usr/sbin/config_environment.sh
        env:
        - name: GITEA_APP_INI
          value: /data/gitea/conf/app.ini
        - name: GITEA_CUSTOM
          value: /data/gitea
        - name: GITEA_WORK_DIR
          value: /data
        - name: GITEA_TEMP
          value: /tmp/gitea
        image: code.forgejo.org/forgejo/forgejo:12.0.3-rootless
        imagePullPolicy: IfNotPresent
        name: init-app-ini
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext: {}
        volumeMounts:
        - mountPath: /usr/sbin
          name: config
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
        - mountPath: /env-to-ini-mounts/inlines/
          name: inline-config-sources
      - command:
        - /usr/sbin/configure_gitea.sh
        env:
        - name: GITEA_APP_INI
          value: /data/gitea/conf/app.ini
        - name: GITEA_CUSTOM
          value: /data/gitea
        - name: GITEA_WORK_DIR
          value: /data
        - name: GITEA_TEMP
          value: /tmp/gitea
        - name: HOME
          value: /data/gitea/git
        - name: GITEA_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: forgejo-admin-secret
        - name: GITEA_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: forgejo-admin-secret
        - name: GITEA_ADMIN_PASSWORD_MODE
          value: keepUpdated
        image: code.forgejo.org/forgejo/forgejo:12.0.3-rootless
        imagePullPolicy: IfNotPresent
        name: configure-gitea
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - mountPath: /usr/sbin
          name: init
        - mountPath: /tmp
          name: temp
        - mountPath: /data
          name: data
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 60
      volumes:
      - name: init
        secret:
          defaultMode: 110
          secretName: forgejo-init
      - name: config
        secret:
          defaultMode: 110
          secretName: forgejo
      - name: inline-config-sources
        secret:
          secretName: forgejo-inline-config
      - emptyDir: {}
        name: temp
      - name: data
        persistentVolumeClaim:
          claimName: gitea-shared-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: valkey
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: valkey
    app.kubernetes.io/version: 8.1.3
    helm.sh/chart: valkey-0.3.0
  name: valkey
  namespace: forgejo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: valkey
      app.kubernetes.io/name: valkey
  serviceName: valkey-headless
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: valkey
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: valkey
        app.kubernetes.io/version: 8.1.3
        helm.sh/chart: valkey-0.3.0
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - valkey-server /etc/valkey/valkey.conf --requirepass "${VALKEY_PASSWORD}"
        env:
        - name: VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: valkey
        image: docker.io/valkey/valkey:8.1.3-alpine3.22@sha256:d827e7f7552cdee40cc7482dbae9da020f42bc47669af6f71182a4ef76a22773
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              valkey-cli -a "${VALKEY_PASSWORD}" ping
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: valkey
        ports:
        - containerPort: 6379
          name: valkey
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              valkey-cli -a "${VALKEY_PASSWORD}" ping
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/valkey
          name: config
        - mountPath: /tmp
          name: tmp
      securityContext:
        fsGroup: 1000
      serviceAccountName: default
      volumes:
      - configMap:
          name: valkey
        name: config
      - emptyDir: {}
        name: tmp
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-forgejo
  namespace: forgejo
spec:
  bootstrap:
    initdb:
      database: forgejo
      owner: forgejo
      secret:
        name: cnpg-forgejo-app-user
  instances: 3
  storage:
    size: 10Gi
  superuserSecret:
    name: cnpg-forgejo-superuser
